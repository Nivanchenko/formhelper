Перем ПостроительФорм;
Перем Отборы;
Перем Параметры;
Перем ОсновнаяТаблица;
Перем ПроизвольныйЗапрос;
Перем ИмяРеквизита;
Перем ТекстЗапроса;
Перем ПараметрыЗапроса;

#Область Инициализация

Процедура Инициализация(_ПостроительФорм) Экспорт 
	
	ПостроительФорм = _ПостроительФорм;
	
	ИнициализацияПеременных();
	
КонецПроцедуры

Процедура ИнициализацияПеременных()
	Отборы = Новый Массив;
	Параметры = Новый Массив;
	ПроизвольныйЗапрос = Ложь;
	ИмяРеквизита = "";
	ОсновнаяТаблица = "";
	ТекстЗапроса = "";
	ПараметрыЗапроса = Новый Структура;
КонецПроцедуры

#КонецОбласти

Функция Применить() Экспорт 

	ПостроительФорм.РеквизитДинамическийСписок(ИмяРеквизита).Применить();
	
	ТекущийДС = ПостроительФорм.Форма()[ИмяРеквизита];
	ТекущийДС.ПроизвольныйЗапрос = ПроизвольныйЗапрос;
	ТекущийДС.ОсновнаяТаблица = ОсновнаяТаблица;
	
	Если ПроизвольныйЗапрос = Истина Тогда
		ТекущийДС.ТекстЗапроса = ТекстЗапроса;
	КонецЕсли;
	
	Для Каждого ТекОтбор из Отборы Цикл
		Отбор = ТекущийДС.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ВидСравнения = ТекОтбор.ВидСравнения;
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ТекОтбор.Поле);
		Отбор.ПравоеЗначение = ТекОтбор.Значение;
	КонецЦикла;
	
	Для Каждого ТекПараметр из ПараметрыЗапроса Цикл 
		ТекущийДС.Параметры.УстановитьЗначениеПараметра(ТекПараметр.Ключ, ТекПараметр.Значение);
	КонецЦикла;
	
	ИнициализацияПеременных();
	
	Возврат ПостроительФорм;

КонецФункции // Применить()

Функция ИмяРеквизита(Реквизит) Экспорт 

	ИмяРеквизита = Реквизит;	
	
	Возврат ЭтотОбъект;

КонецФункции // ИмяРеквизита()

Функция ПроизвольныйЗапрос(ФлагЗапроса) Экспорт 

	ПроизвольныйЗапрос = ФлагЗапроса;
	
	Возврат ЭтотОбъект;

КонецФункции // ПроизвольныйЗапрос()

Функция ОсновнаяТаблица(ИмяТаблицы) Экспорт 

	ОсновнаяТаблица = ИмяТаблицы;
	
	Возврат ЭтотОбъект;

КонецФункции // ОсновнаяТаблица()

Функция Отбор(Поле, Значение, _ВидСравнения = Неопределено) Экспорт 
	
	Если _ВидСравнения = Неопределено Тогда
		_ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;

	Отборы.Добавить(Новый Структура("Поле, Значение, ВидСравнения", Поле, Значение, _ВидСравнения));
	
	Возврат ЭтотОбъект;

КонецФункции // Отбор()

Функция ТекстЗапроса(_ТекстЗапроса) Экспорт 

	ТекстЗапроса = _ТекстЗапроса;	
	
	Возврат ЭтотОбъект;

КонецФункции // ИмяРеквизита()

Функция Параметр(ИмяПараметра, ЗначениеПараметра) Экспорт 

	ПараметрыЗапроса.Вставить(ИмяПараметра, ЗначениеПараметра);
	
	Возврат ЭтотОбъект;

КонецФункции // Параметр()


